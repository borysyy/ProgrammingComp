<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Submission</title>
    <link href="../../css/styles.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  </head>

  <body data-bs-theme="dark">
    <div class="bg-primary">
      <div class="container-fluid">
        <div class="row align-items-center">
          <div class="col-8">
            <h1 class="display-4">SUNY Poly Programming Competition</h1>
          </div>
          <div class="col d-flex justify-content-end">
            <a href="/" class="btn btn-primary">Back to home</a>
          </div>
        </div>
        <div class="bg-primary">
          <div class="container-fluid">
            <div class="row">
              <div>
                <div class="d-flex" style="gap: 15px">
                  <a
                    href="/Programming_Comp_Rules.pdf"
                    class="btn btn-primary"
                    target="_blank"
                  >
                    Comp Rules
                  </a>
                  <form method="post" action="/logout">
                    <button class="btn btn-primary">Logout</button>
                  </form>
                  <a href="/submissions/spring/2024" class="btn btn-primary"
                    >See your submissions here!</a
                  >
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div>
      <div class="mt-4 text-center">
        <div class="container my-4 py-4">
          <table class="table">
            <thead>
              <tr>
                <th scope="col" class="col-3">Problem Number</th>
                <th scope="col" class="col-3">Problem Link</th>
                <th scope="col" class="col-3">Submit file here</th>
                <th scope="col" class="col-3">Submit code</th>
              </tr>
            </thead>
            <tbody>
              <% for (let r = 0; r < problems.length; r++) { %> <% const
              {problem_num, problem_name} = problems[r] %>
              <tr data-index="<%= r %>">
                <td><%= problem_num %></td>

                <td>
                  <a href="/problems/<%= problem_name %>.zip">
                    <%= problem_name %>.zip
                  </a>
                </td>
                <td>
                  <input
                    type="file"
                    name="file"
                    class="form-control"
                    multiple
                  />
                </td>
                <td>
                  <button class="btn btn-primary">Submit</button>
                </td>
              </tr>
              <% } %>
            </tbody>
          </table>

          <div class="container w-25 mt-5">
            <div class="mx-auto text-center" id="messages"></div>
          </div>
        </div>
      </div>
    </div>
    <script>
      $("button").on("click", async function () {
      	const index = $(this).parent().parent().data("index");
      	const files = $("input")[index].files;

      	if (files.length > 0) {
      		const data = new FormData();

      		function readFileAndModifyContent(files) {
      			const promises = [];
      			const MCarray = [];

      			Array.from(files).forEach(file => {
      				promises.push(new Promise((resolve, reject) => {
      				const reader = new FileReader();

      				reader.onload = function(event) {
      				const fileContent = event.target.result;
      				//.log("unmodifiedContent", fileContent);
      				const modifiedContent = fileContent.replace(/\(\) \{/g, '(){');
      				MCarray.push(modifiedContent);

      				resolve(modifiedContent);
      				};

      				reader.onerror = function(event) {
      				reject(event.target.error);
      				};

      				reader.readAsText(file);
      				}));
      			});

      			return new Promise((resolve, reject) => {
      				Promise.all(promises)
      				.then(() => {
      					resolve(MCarray);
      				})
      				.catch(error => {
      					reject(error);
      				});
      			});
      		}

      		function createFileFromContent(modifiedContent, fileName) {
      			const blob = new Blob([modifiedContent], {type: "text/plain"});
      			const f = new File([blob], fileName, {type: "text/plain"});
      			return f;
      		}

      		readFileAndModifyContent(files)
      			.then(modifiedContents => {
      	for(let i = 0; i < files.length; i++) {
      		const file = createFileFromContent(modifiedContents[i], files[i].name);
      		createFileFromContent(modifiedContents[i], files[i].name);
      		data.append("file", file);
      	}

      	const user = "<%= user %>";
      	data.append("user", user);

      	const pathname = window.location.pathname.split("/");
      	const semester = pathname[2];
      	const year = pathname[3];

      	data.append("semester", semester);
      	data.append("year", year);

      	const problems = <%- JSON.stringify(problems) %>;

      	data.append("problems", JSON.stringify(problems));

      	data.append("index", index);

      	return fetch("/submit", {
      		method: "POST",
      		body: data,
      	});
      })
      .then(response => {
      	const status = response.status;

      	if (status == 200) {
      		$("#messages").html(
      		`
      		<div
      		class="alert alert-success"
      		role="alert"
      		>Uploaded successfully</div>
      		`);
      	} else {
      	$("#messages").html(
      		`
      		<div
      		class="alert alert-danger"
      		role="alert"
      		>Uploaded failed</div>
      		`);
      	}
      	})
      	.catch(error => {
      		console.error("Error reading or modifying file:", error);
      	});
      	}
      });
    </script>
  </body>
</html>
